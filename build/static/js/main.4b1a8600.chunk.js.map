{"version":3,"sources":["utils/request.ts","views/component/message/index.tsx","views/component/message/Msg.tsx","store/reducer.js","store/index.js","utils/news.ts","store/actionCreators.js","service/login.ts","FrontendAuth.js","routerMap.js","router/index.jsx","reportWebVitals.ts","index.tsx","store/constants.js"],"names":["get","url","params","Promise","resolve","reject","axios","then","response","data","catch","error","message","info","post","err","defaults","timeout","baseURL","interceptors","request","use","config","JSON","stringify","firstToken","window","localStorage","getItem","headers","errno","console","log","removeItem","location","pathname","href","add","Msg","type","text","className","MessageContainer","useState","lists","setList","option","pre","obj","setTimeout","L","key","filter","each","remove","useEffect","length","shift","map","getId","Math","random","toFixed","$message","success","warning","el","document","getElementById","createElement","id","body","append","ReactDOM","createMessage","defaultState","userInfo","loginShow","reducer","state","action","SetUserInfo","RemoveUserInfo","LoginShow","LoginRemove","store","createStore","require","util","getScrollTop","bodyScrollTop","documentScrollTop","scrollTop","documentElement","getScrollHeight","bodyScrollHeight","documentScrollHeight","scrollHeight","getWindowHeight","compatMode","clientHeight","getIsTOBottom","firstTokenUserinfo","a","getUser","result","status","dispatch","setUserInfo","getUrlParam","name","reg","RegExp","r","search","substring","match","decodeURI","removeUserInfo","loginRemove","dologin","captcha","sendSms","sendSmsreg","doreg","loginOut","FrontendAuth","props","this","routerConfig","isLogin","getState","targetRouterConfig","find","item","path","auth","component","exact","to","Component","Loading","Login","loadable","LoadingComponent","Register","routerMap","IRouter","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.4b1a8600.chunk.js","sourcesContent":["/**\r\n * 网络请求配置\r\n */\r\n import axios from \"axios\";\r\n import message from '../views/component/message/index'\r\nimport { AxisPointerComponent } from \"echarts/components\";\r\n\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.baseURL = \"/api\";\r\n\r\n\r\n \r\n /**\r\n  * http request 拦截器\r\n  */\r\n axios.interceptors.request.use(\r\n   (config) => {   \r\n     config.data = JSON.stringify(config.data);\r\n      let firstToken = window.localStorage.getItem(\"firstToken\")\r\n      let type = localStorage.getItem('type')\r\n    if(firstToken){\r\n        config.headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": firstToken\r\n          };\r\n    }else {\r\n        config.headers = {\r\n            \"Content-Type\": \"application/json\"\r\n          };\r\n    }\r\n    // if(type){\r\n    //   config.headers = {\r\n    //     \"Content-Type\": \"multipart/form-data\"\r\n    //   };\r\n    // }\r\n     return config;\r\n   },\r\n   (error) => {\r\n     return Promise.reject(error);\r\n   }\r\n );\r\n \r\n /**\r\n  * http response 拦截器\r\n  */\r\n axios.interceptors.response.use(\r\n   (response) => {\r\n     if (response.data.errno === 10620) {\r\n       console.log(\"登录状态过期\");\r\n       localStorage.removeItem('userInfo')\r\n       let url = window.location.pathname==='/app/login'?'/app/login':'/app/login?url='+window.location.pathname\r\n       window.location.href=url\r\n       message.info('登录状态过期，请再次登录')\r\n     }\r\n     if(response.data.errno === 10403){\r\n        message.info('非法token')\r\n        \r\n     }\r\n     return response;\r\n   },\r\n   (error) => {\r\n     console.log(\"请求出错：\", error);\r\n     message.info( error)\r\n   }\r\n );\r\n \r\n /**\r\n  * 封装get方法\r\n  * @param url  请求url\r\n  * @param params  请求参数\r\n  * @returns {Promise}\r\n  */\r\n export function get(url, params = {}) {\r\n   return new Promise<API.IResult>((resolve, reject) => {\r\n     axios.get(url, {\r\n         params: params,\r\n       }).then((response) => {\r\n         resolve(response.data);\r\n       })\r\n       .catch((error) => {\r\n        message.info(error)\r\n         reject(error);\r\n       });\r\n   });\r\n }\r\n \r\n /**\r\n  * 封装post请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n \r\n export function post(url, data) {\r\n   return new Promise<API.IResult>((resolve, reject) => {\r\n     axios.post(url, data).then(\r\n       (response) => {\r\n         //关闭进度条\r\n         resolve(response.data);\r\n       },\r\n       (err) => {\r\n        message.info(err.data.message)\r\n         reject(err);\r\n       }\r\n     );\r\n   });\r\n }\r\n \r\n /**\r\n  * 封装patch请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n export function patch(url, data = {}) {\r\n   return new Promise((resolve, reject) => {\r\n     axios.patch(url, data).then(\r\n       (response) => {\r\n         resolve(response.data);\r\n       },\r\n       (err) => {\r\n         msag(err);\r\n         reject(err);\r\n       }\r\n     );\r\n   });\r\n }\r\n \r\n /**\r\n  * 封装put请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n \r\n export function put(url, data = {}) {\r\n   return new Promise((resolve, reject) => {\r\n     axios.put(url, data).then(\r\n       (response) => {\r\n         resolve(response.data);\r\n       },\r\n       (err) => {\r\n         msag(err);\r\n         reject(err);\r\n       }\r\n     );\r\n   });\r\n }\r\n \r\n //统一接口处理，返回数据\r\n export default function (fecth, url, param) {\r\n   let _data = \"\";\r\n   return new Promise((resolve, reject) => {\r\n     switch (fecth) {\r\n       case \"get\":\r\n         console.log(\"begin a get request,and url:\", url);\r\n         get(url, param)\r\n           .then(function (response) {\r\n             resolve(response);\r\n           })\r\n           .catch(function (error) {\r\n             console.log(\"get request GET failed.\", error);\r\n             reject(error);\r\n           });\r\n         break;\r\n       case \"post\":\r\n         post(url, param)\r\n           .then(function (response) {\r\n             resolve(response);\r\n           })\r\n           .catch(function (error) {\r\n             console.log(\"get request POST failed.\", error);\r\n             reject(error);\r\n           });\r\n         break;\r\n       default:\r\n         break;\r\n     }\r\n   });\r\n }\r\n \r\n //失败提示\r\n function msag(err) {\r\n   if (err && err.response) {\r\n     switch (err.response.status) {\r\n       case 400:\r\n         alert(err.response.data.error.details);\r\n         break;\r\n       case 401:\r\n         alert(\"未授权，请登录\");\r\n         break;\r\n \r\n       case 403:\r\n         alert(\"拒绝访问\");\r\n         break;\r\n \r\n       case 404:\r\n         alert(\"请求地址出错\");\r\n         break;\r\n \r\n       case 408:\r\n         alert(\"请求超时\");\r\n         break;\r\n \r\n       case 500:\r\n         alert(\"服务器内部错误\");\r\n         break;\r\n \r\n       case 501:\r\n         alert(\"服务未实现\");\r\n         break;\r\n \r\n       case 502:\r\n         alert(\"网关错误\");\r\n         break;\r\n \r\n       case 503:\r\n         alert(\"服务不可用\");\r\n         break;\r\n \r\n       case 504:\r\n         alert(\"网关超时\");\r\n         break;\r\n \r\n       case 505:\r\n         alert(\"HTTP版本不受支持\");\r\n         break;\r\n       default:\r\n     }\r\n   }\r\n }\r\n \r\n /**\r\n  * 查看返回的数据\r\n  * @param url\r\n  * @param params\r\n  * @param data\r\n  */\r\n function landing(url, params, data) {\r\n   console.log(url)\r\n   if (data.code === -1) {\r\n   }\r\n }\r\n \r\n ","// index.tsx\r\nimport { useState,useEffect } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport Msg from './Msg';\r\nimport { MessageApi,List } from './config';\r\nimport './index.scss';\r\n\r\nlet add: (L: List) => void;\r\nexport const MessageContainer = () => {\r\n  const [lists ,setList] = useState<List[]>([]);\r\n  const remove = (L:List) => {\r\n    const { key } = L;\r\n    setList((pre:List[]) => ( pre.filter((each:List) => key !== each.key) ))\r\n  }\r\n\r\n  add = (option:List) => {\r\n    setList((pre:List[])=>{\r\n      const obj = [...pre,option ];\r\n      setTimeout(() => {\r\n          remove(option)\r\n        }, 1500)\r\n        return obj\r\n    })\r\n    // 最好不用下面这个写法，当同时调用两个message时候，只会显示最后调用那次\r\n    // const obj = [...lists,option ];\r\n    // setList(obj);\r\n    // setTimeout(() => {\r\n    //   remove(option)\r\n    // }, timeout)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lists.length > 0) {\r\n      lists.shift();\r\n    }\r\n  }, [lists])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        lists.map(({ text, key, type }) => (\r\n            <Msg key={key} type={type} text={text} />\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n} \r\n\r\n// 获取唯一id\r\nconst getId = () => {\r\n  return (Math.random() * 1000).toFixed()\r\n}\r\n\r\n// 暴露的message-API\r\nconst $message: MessageApi = {\r\n  info: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'info'\r\n    })\r\n  },\r\n  success: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'success'\r\n    })\r\n  },\r\n  warning: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'warning'\r\n    })\r\n  },\r\n  error: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'error'\r\n    })\r\n  }\r\n}\r\nexport default $message;\r\n\r\n// 挂载容器到页面\r\nconst createMessage = () => {\r\n  let el = document.getElementById('#message-wrap');\r\n  // 这一步是必要的的，因为在执行到这里的时候，页面还没有挂载，所以获取不到el节点\r\n  if (!el) {\r\n      el = document.createElement('div')\r\n      el.className = 'message-wrap'\r\n      el.id = 'message-wrap'\r\n      document.body.append(el)\r\n  }\r\n  ReactDOM.render( <MessageContainer />, el);\r\n}\r\ncreateMessage();\r\n\r\n","// Msg.tsx\r\nconst Msg = ({type, text }:{ type:string,text: string }) => {\r\n    return (\r\n          <div className={`message ${type}`}>\r\n              {/* <span className='icon' /> */}\r\n              <span>{text}</span>\r\n          </div>\r\n    );\r\n  };\r\n  \r\n  export default Msg;\r\n  \r\n  ","import { SetUserInfo, RemoveUserInfo,LoginShow,LoginRemove } from \"./constants.js\";\r\n\r\nconst defaultState = {\r\n    userInfo: null,\r\n    loginShow:false\r\n};\r\n\r\nfunction reducer(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case SetUserInfo:\r\n      return {\r\n        ...state,\r\n        userInfo: action.userInfo,\r\n      };\r\n    case RemoveUserInfo:\r\n      return {\r\n        ...state,\r\n        userInfo: null,\r\n      };\r\n    case LoginShow:\r\n      return {\r\n        ...state,\r\n        loginShow: true,\r\n      };\r\n    case LoginRemove:\r\n      return {\r\n        ...state,\r\n        loginShow: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","// 2. 引入reducer\r\nimport reducer from \"./reducer.js\";\r\n// 3.创建一个store\r\nconst {createStore} = require(\"redux\");\r\nconst store = createStore(reducer)\r\n\r\nexport default store;\r\n","//@ts-nocheck\r\nimport { getUser } from \"service/login\";\r\nimport store from \"store\";\r\nimport { setUserInfo } from \"store/actionCreators\";\r\nexport const util = {\r\n    getScrollTop : () => {\r\n        var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\r\n        if(document.body){\r\n          bodyScrollTop = document.body.scrollTop;\r\n        }\r\n        if(document.documentElement){\r\n          documentScrollTop = document.documentElement.scrollTop;\r\n        }\r\n        scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\r\n        return scrollTop;\r\n      },\r\n    getScrollHeight : () => {\r\n        var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\r\n        if(document.body){\r\n            bodyScrollHeight = document.body.scrollHeight;\r\n        }\r\n        if(document.documentElement){\r\n            documentScrollHeight = document.documentElement.scrollHeight;\r\n        }\r\n        scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\r\n        return scrollHeight;\r\n    },\r\n    getWindowHeight : () => {\r\n        var windowHeight = 0;\r\n        if(document.compatMode == \"CSS1Compat\"){\r\n            windowHeight = document.documentElement.clientHeight;\r\n        }else{\r\n            windowHeight = document.body.clientHeight;\r\n        }\r\n        return windowHeight;\r\n    },\r\n    getIsTOBottom:()=>{\r\n        return util.getScrollHeight() - util.getScrollTop() - util.getWindowHeight()\r\n    },\r\n    firstTokenUserinfo:async()=>{\r\n        // let firstToken =localStorage.getItem('firstToken')\r\n        // if(!firstToken){\r\n        //     const res = await token()\r\n        //     localStorage.setItem('firstToken',res.body)\r\n            \r\n        // } \r\n        const result = await getUser()\r\n        result.status && store.dispatch(setUserInfo(result.body))\r\n    },\r\n    getUrlParam:(name)=>{\r\n        var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\");\r\n        var r = window.location.search.substring(1).match(reg);\r\n        if(r!=null)return  decodeURI(r[2]); return null;\r\n    }\r\n}","// 引入需要使用的 常量\r\nimport { SetUserInfo, RemoveUserInfo,LoginShow,LoginRemove } from \"./constants.js\";\r\n// 存储用户信息\r\nexport const setUserInfo = (userInfo) => {\r\n  return {\r\n    type: SetUserInfo,\r\n    userInfo,\r\n  };\r\n};\r\n// 删除用户信息\r\nexport const removeUserInfo = () => ({\r\n  type: RemoveUserInfo\r\n});\r\n\r\n//设定悬浮框登录显示\r\nexport const loginShow = () => ({\r\n  type: LoginShow\r\n})\r\n\r\n//设定悬浮框登录消失\r\nexport const loginRemove = () => ({\r\n  type: LoginRemove\r\n})","import {get, post} from '../utils/request'\r\n\r\nexport const dologin =(data):Promise<API.IResult>=>{\r\n    return  post('login/dologin',data)\r\n}\r\n\r\nexport const captcha  =():Promise<API.IResult>=>{\r\n    return  get('user/public/captcha')\r\n}\r\n\r\nexport const sendSms =(data):Promise<API.IResult>=>{\r\n    return  post('login/send-sms',data)\r\n}\r\n\r\nexport const sendSmsreg =(data):Promise<API.IResult>=>{\r\n    return  post('login/send-sms-reg',data)\r\n}\r\n\r\nexport const getUser =():Promise<API.IResult>=>{\r\n    return  get('user/public/get-user')\r\n}\r\n\r\nexport const doreg =(data):Promise<API.IResult>=>{\r\n    return  post('login/doreg',data)\r\n}\r\n\r\n\r\nexport const loginOut =():Promise<API.IResult>=>{\r\n    return  get('login/login-out')\r\n}","/**\r\n * 路由守卫校验\r\n */\r\n import { Divider } from \"antd\";\r\nimport React, {Component} from \"react\";\r\n import {Route, Redirect} from \"react-router-dom\";\r\n import store from \"store\";\r\n \r\n class FrontendAuth extends Component {\r\n     // eslint-disable-next-line no-useless-constructor\r\n     constructor(props) {\r\n         super(props);\r\n     }\r\n \r\n     render() {\r\n         const {routerConfig, location} = this.props;\r\n         const {pathname} = location;\r\n         const isLogin = store.getState().userInfo;\r\n        //  console.log(pathname, isLogin);\r\n        //  console.log(location);\r\n\r\n         // 如果该路由不用进行权限校验，登录状态下登陆页除外\r\n         // 因为登陆后，无法跳转到登陆页\r\n         // 这部分代码，是为了在非登陆状态下，访问不需要权限校验的路由\r\n         const targetRouterConfig = routerConfig.find(\r\n             (item) => item.path === pathname\r\n         );\r\n         console.log(targetRouterConfig);\r\n         if (targetRouterConfig && !targetRouterConfig.auth && !isLogin) {\r\n             const {component} = targetRouterConfig;\r\n             return <Route exact path={pathname} component={component}/>;\r\n         }\r\n         if (isLogin) {\r\n             // 如果是登陆状态，想要跳转到登陆，重定向到主页,但是这里的主页是另一个项目的HTML，像这样重定向页面不会跳转，所以暂时重定向到个人中心\r\n             if (pathname === \"/app/login\") {\r\n                 return <Redirect to=\"/app/user\"/>;\r\n             } else {\r\n                 // 如果路由合法，就跳转到相应的路由\r\n                 if (targetRouterConfig) {\r\n                     return (\r\n                         <Route path={pathname} component={targetRouterConfig.component}/>\r\n                     );\r\n                 } else {\r\n                     // 如果路由不合法，重定向到 404 页面\r\n                    return <Redirect to={pathname}/>;\r\n                 }\r\n             }\r\n         } else {\r\n             // 非登陆状态下，当路由合法时且需要权限校验时，跳转到登陆页面，要求登陆\r\n             if(targetRouterConfig){                \r\n                if(targetRouterConfig.auth){\r\n                    return <Redirect to=\"/app/login\"/>;\r\n                }else{\r\n                    <Route path={pathname} component={targetRouterConfig.component}/>\r\n                }\r\n             }else {\r\n                // 如果路由不合法，重定向到 404 页面\r\n                return <Redirect to={pathname}/>;\r\n            }\r\n             \r\n         }\r\n     }\r\n }\r\n \r\n export default FrontendAuth;\r\n \r\n ","import loadable from 'loadable-components'     //npm i loadable-components 用作解决路由懒加载\r\nconst Loading = () => <div>Loading...</div>\r\n \r\nconst Home = loadable(() => import('views/home'), {\r\n    LoadingComponent: Loading,\r\n})\r\nconst Login = loadable(() => import('views/login/login'), {\r\n    LoadingComponent: Loading,\r\n})\r\n\r\nconst Register = loadable(() => import('views/login/register'), {\r\n    LoadingComponent: Loading,\r\n})\r\n\r\nconst User = loadable(() => import('views/user/user'), {\r\n    LoadingComponent: Loading,\r\n})\r\n//新闻列表页\r\nconst News = loadable(()=> import('views/news/news'), {\r\n    LoadingComponent: Loading,\r\n})\r\n//新闻详情页\r\nconst NewsDetail = loadable(()=> import('views/news/newsDetail'), {\r\n    LoadingComponent: Loading,\r\n})\r\n//文章作者的更多页面\r\nconst NewsAuthorMore = loadable(()=> import('views/news/authorMore'), {\r\n    LoadingComponent: Loading,\r\n})\r\n\r\n\r\nexport const routerMap = [\r\n    {path: \"/app/user\", name: \"User\", component: User, auth: true},\r\n    {path: \"/app/login\", name: \"Login\", component: Login},\r\n    {path: \"/app/register/register\", name: \"Register\", component: Register},\r\n    {path: \"/app/register/forget\", name: \"Register\", component: Register},\r\n    {path: \"/app/news\", name: \"News\", component: News},\r\n    {path: \"/app/newsdetail\", name: \"NewsDetail\", component: NewsDetail},\r\n    {path: \"/app/newsauthormore\", name: \"NewsAuthorMore\", component: NewsAuthorMore},\r\n];","import React,{Fragment} from 'react'\r\nimport loadable from 'loadable-components'     //npm i loadable-components 用作解决路由懒加载\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport FrontendAuth from \"FrontendAuth\";\r\nimport {routerMap} from \"routerMap\";\r\n// import NotFound from '../views/notFound'\r\n \r\n// const Loading = () => <div>Loading...</div>\r\n \r\n// const Home = loadable(() => import('../views/home'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n// const Login = loadable(() => import('../views/login/login'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n\r\n// const Register = loadable(() => import('../views/login/register'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n\r\n// const User = loadable(() => import('../views/user/user'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n// //新闻列表页\r\n// const News = loadable(()=> import('../views/news/news'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n// //新闻详情页\r\n// const NewsDetail = loadable(()=> import('../views/news/newsDetail'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n// //文章作者的更多页面\r\n// const NewsAuthorMore = loadable(()=> import('../views/news/authorMore'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n// const Develop = loadable(() => import('../views/develop.tsx'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n// const Oss = loadable(() => import('../views/ossImg.tsx'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n \r\n \r\nclass IRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Fragment>\r\n                    {/*只匹配一个，匹配成功就不往下匹配，效率高*/}\r\n                    <Switch>\r\n                        <FrontendAuth routerConfig={routerMap}/>\r\n                    </Switch>\r\n                </Fragment>\r\n       \r\n                </Router>\r\n        )\r\n    }\r\n}\r\nexport default IRouter","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'index.scss';\r\nimport Router from 'router/index'\r\nimport reportWebVitals from 'reportWebVitals';\r\nimport {util} from 'utils/news'\r\n\r\nutil.firstTokenUserinfo().then(()=>{\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Router />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n})\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// util.firstToken()\r\n","export const SetUserInfo = \"SetUserInfo\";\r\nexport const RemoveUserInfo = \"RemoveUserInfo\";\r\nexport const LoginShow = \"LoginShow\"\r\nexport const LoginRemove = \"LoginRemove\"\r\n"],"sourceRoot":""}