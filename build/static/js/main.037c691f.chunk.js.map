{"version":3,"sources":["views/component/message/index.tsx","views/component/message/Msg.tsx","service/login.ts","utils/news.ts","utils/request.ts","views/notFound.tsx","router/index.jsx","reportWebVitals.ts","index.tsx"],"names":["add","Msg","type","text","className","MessageContainer","useState","lists","setList","option","pre","obj","setTimeout","L","key","filter","each","remove","useEffect","length","shift","map","getId","Math","random","toFixed","$message","info","success","warning","error","el","document","getElementById","createElement","id","body","append","ReactDOM","createMessage","token","get","dologin","data","post","captcha","sendSms","sendSmsreg","getUser","doreg","loginOut","util","getScrollTop","bodyScrollTop","documentScrollTop","scrollTop","documentElement","getScrollHeight","bodyScrollHeight","documentScrollHeight","scrollHeight","getWindowHeight","compatMode","clientHeight","getIsTOBottom","firstToken","a","localStorage","getItem","res","setItem","url","params","Promise","resolve","reject","axios","then","response","catch","message","err","defaults","timeout","baseURL","interceptors","request","use","config","JSON","stringify","window","headers","errno","console","log","removeItem","location","href","pathname","status","reload","NotFound","Component","Loading","Home","loadable","LoadingComponent","Login","Register","User","News","NewsDetail","NewsAuthorMore","Develop","IRouter","path","component","exact","extra","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.037c691f.chunk.js","sourcesContent":["// index.tsx\r\nimport { useState,useEffect } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport Msg from './Msg';\r\nimport { MessageApi,List } from './config';\r\nimport './index.scss';\r\n\r\nlet add: (L: List) => void;\r\nexport const MessageContainer = () => {\r\n  const [lists ,setList] = useState<List[]>([]);\r\n  const remove = (L:List) => {\r\n    const { key } = L;\r\n    setList((pre:List[]) => ( pre.filter((each:List) => key !== each.key) ))\r\n  }\r\n\r\n  add = (option:List) => {\r\n    setList((pre:List[])=>{\r\n      const obj = [...pre,option ];\r\n      setTimeout(() => {\r\n          remove(option)\r\n        }, 1500)\r\n        return obj\r\n    })\r\n    // 最好不用下面这个写法，当同时调用两个message时候，只会显示最后调用那次\r\n    // const obj = [...lists,option ];\r\n    // setList(obj);\r\n    // setTimeout(() => {\r\n    //   remove(option)\r\n    // }, timeout)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lists.length > 0) {\r\n      lists.shift();\r\n    }\r\n  }, [lists])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        lists.map(({ text, key, type }) => (\r\n            <Msg key={key} type={type} text={text} />\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n} \r\n\r\n// 获取唯一id\r\nconst getId = () => {\r\n  return (Math.random() * 1000).toFixed()\r\n}\r\n\r\n// 暴露的message-API\r\nconst $message: MessageApi = {\r\n  info: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'info'\r\n    })\r\n  },\r\n  success: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'success'\r\n    })\r\n  },\r\n  warning: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'warning'\r\n    })\r\n  },\r\n  error: (text) => {\r\n    add({\r\n      text,\r\n      key: getId(),\r\n      type: 'error'\r\n    })\r\n  }\r\n}\r\nexport default $message;\r\n\r\n// 挂载容器到页面\r\nconst createMessage = () => {\r\n  let el = document.getElementById('#message-wrap');\r\n  // 这一步是必要的的，因为在执行到这里的时候，页面还没有挂载，所以获取不到el节点\r\n  if (!el) {\r\n      el = document.createElement('div')\r\n      el.className = 'message-wrap'\r\n      el.id = 'message-wrap'\r\n      document.body.append(el)\r\n  }\r\n  ReactDOM.render( <MessageContainer />, el);\r\n}\r\ncreateMessage();\r\n\r\n","// Msg.tsx\r\nconst Msg = ({type, text }:{ type:string,text: string }) => {\r\n    return (\r\n          <div className={`message ${type}`}>\r\n              {/* <span className='icon' /> */}\r\n              <span>{text}</span>\r\n          </div>\r\n    );\r\n  };\r\n  \r\n  export default Msg;\r\n  \r\n  ","import {get, post} from '../utils/request'\r\n\r\nexport const token = (): Promise<API.IResult> => {\r\n    return get('user/public/token')\r\n}\r\n\r\nexport const dologin =(data):Promise<API.IResult>=>{\r\n    return  post('login/dologin',data)\r\n}\r\n\r\nexport const captcha  =():Promise<API.IResult>=>{\r\n    return  get('user/public/captcha')\r\n}\r\n\r\nexport const sendSms =(data):Promise<API.IResult>=>{\r\n    return  post('login/send-sms',data)\r\n}\r\n\r\nexport const sendSmsreg =(data):Promise<API.IResult>=>{\r\n    return  post('login/send-sms-reg',data)\r\n}\r\n\r\nexport const getUser =():Promise<API.IResult>=>{\r\n    return  get('user/public/get-user')\r\n}\r\n\r\nexport const doreg =(data):Promise<API.IResult>=>{\r\n    return  post('login/doreg',data)\r\n}\r\n\r\n\r\nexport const loginOut =():Promise<API.IResult>=>{\r\n    return  get('login/login-out')\r\n}","import { token } from \"../service/login\";\r\nexport const util = {\r\n    getScrollTop : () => {\r\n        var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\r\n        if(document.body){\r\n          bodyScrollTop = document.body.scrollTop;\r\n        }\r\n        if(document.documentElement){\r\n          documentScrollTop = document.documentElement.scrollTop;\r\n        }\r\n        scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\r\n        return scrollTop;\r\n      },\r\n    getScrollHeight : () => {\r\n        var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\r\n        if(document.body){\r\n            bodyScrollHeight = document.body.scrollHeight;\r\n        }\r\n        if(document.documentElement){\r\n            documentScrollHeight = document.documentElement.scrollHeight;\r\n        }\r\n        scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\r\n        return scrollHeight;\r\n    },\r\n    getWindowHeight : () => {\r\n        var windowHeight = 0;\r\n        if(document.compatMode == \"CSS1Compat\"){\r\n            windowHeight = document.documentElement.clientHeight;\r\n        }else{\r\n            windowHeight = document.body.clientHeight;\r\n        }\r\n        return windowHeight;\r\n    },\r\n    getIsTOBottom:()=>{\r\n        return util.getScrollHeight() - util.getScrollTop() - util.getWindowHeight()\r\n    },\r\n    firstToken:async()=>{\r\n        let firstToken =localStorage.getItem('firstToken')\r\n        if(!firstToken){\r\n            const res = await token()\r\n            localStorage.setItem('firstToken',res.body)\r\n        } \r\n    }\r\n}","/**\r\n * 网络请求配置\r\n */\r\n import axios from \"axios\";\r\n import message from '../views/component/message/index'\r\n import {token} from '../service/login'\r\nimport { AxisPointerComponent } from \"echarts/components\";\r\n\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.baseURL = \"/api\";\r\n\r\n\r\n \r\n /**\r\n  * http request 拦截器\r\n  */\r\n axios.interceptors.request.use(\r\n   (config) => {   \r\n     config.data = JSON.stringify(config.data);\r\n      let firstToken = window.localStorage.getItem(\"firstToken\")\r\n      let type = localStorage.getItem('type')\r\n    if(firstToken){\r\n        config.headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": firstToken\r\n          };\r\n    }else {\r\n        config.headers = {\r\n            \"Content-Type\": \"application/json\"\r\n          };\r\n    }\r\n    // if(type){\r\n    //   config.headers = {\r\n    //     \"Content-Type\": \"multipart/form-data\"\r\n    //   };\r\n    // }\r\n     return config;\r\n   },\r\n   (error) => {\r\n     return Promise.reject(error);\r\n   }\r\n );\r\n \r\n /**\r\n  * http response 拦截器\r\n  */\r\n axios.interceptors.response.use(\r\n   (response) => {\r\n     if (response.data.errno === 10620) {\r\n       console.log(\"登录状态过期\");\r\n       localStorage.removeItem('userInfo')\r\n       window.location.href='/app/login?url='+window.location.pathname\r\n       message.info('登录状态过期，请再次登录')\r\n     }\r\n     if(response.data.errno === 10403){\r\n        token().then(res=>{\r\n          if(res.status){\r\n            localStorage.setItem('firstToken',res.body)\r\n            window.location.reload()\r\n          }\r\n        })\r\n     }\r\n     return response;\r\n   },\r\n   (error) => {\r\n     console.log(\"请求出错：\", error);\r\n     message.info( error)\r\n   }\r\n );\r\n \r\n /**\r\n  * 封装get方法\r\n  * @param url  请求url\r\n  * @param params  请求参数\r\n  * @returns {Promise}\r\n  */\r\n export function get(url, params = {}) {\r\n   return new Promise<API.IResult>((resolve, reject) => {\r\n     axios.get(url, {\r\n         params: params,\r\n       }).then((response) => {\r\n         resolve(response.data);\r\n       })\r\n       .catch((error) => {\r\n        message.info(error)\r\n         reject(error);\r\n       });\r\n   });\r\n }\r\n \r\n /**\r\n  * 封装post请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n \r\n export function post(url, data) {\r\n   return new Promise<API.IResult>((resolve, reject) => {\r\n     axios.post(url, data).then(\r\n       (response) => {\r\n         //关闭进度条\r\n         resolve(response.data);\r\n       },\r\n       (err) => {\r\n        message.info(err.data.message)\r\n         reject(err);\r\n       }\r\n     );\r\n   });\r\n }\r\n \r\n /**\r\n  * 封装patch请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n export function patch(url, data = {}) {\r\n   return new Promise((resolve, reject) => {\r\n     axios.patch(url, data).then(\r\n       (response) => {\r\n         resolve(response.data);\r\n       },\r\n       (err) => {\r\n         msag(err);\r\n         reject(err);\r\n       }\r\n     );\r\n   });\r\n }\r\n \r\n /**\r\n  * 封装put请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n \r\n export function put(url, data = {}) {\r\n   return new Promise((resolve, reject) => {\r\n     axios.put(url, data).then(\r\n       (response) => {\r\n         resolve(response.data);\r\n       },\r\n       (err) => {\r\n         msag(err);\r\n         reject(err);\r\n       }\r\n     );\r\n   });\r\n }\r\n \r\n //统一接口处理，返回数据\r\n export default function (fecth, url, param) {\r\n   let _data = \"\";\r\n   return new Promise((resolve, reject) => {\r\n     switch (fecth) {\r\n       case \"get\":\r\n         console.log(\"begin a get request,and url:\", url);\r\n         get(url, param)\r\n           .then(function (response) {\r\n             resolve(response);\r\n           })\r\n           .catch(function (error) {\r\n             console.log(\"get request GET failed.\", error);\r\n             reject(error);\r\n           });\r\n         break;\r\n       case \"post\":\r\n         post(url, param)\r\n           .then(function (response) {\r\n             resolve(response);\r\n           })\r\n           .catch(function (error) {\r\n             console.log(\"get request POST failed.\", error);\r\n             reject(error);\r\n           });\r\n         break;\r\n       default:\r\n         break;\r\n     }\r\n   });\r\n }\r\n \r\n //失败提示\r\n function msag(err) {\r\n   if (err && err.response) {\r\n     switch (err.response.status) {\r\n       case 400:\r\n         alert(err.response.data.error.details);\r\n         break;\r\n       case 401:\r\n         alert(\"未授权，请登录\");\r\n         break;\r\n \r\n       case 403:\r\n         alert(\"拒绝访问\");\r\n         break;\r\n \r\n       case 404:\r\n         alert(\"请求地址出错\");\r\n         break;\r\n \r\n       case 408:\r\n         alert(\"请求超时\");\r\n         break;\r\n \r\n       case 500:\r\n         alert(\"服务器内部错误\");\r\n         break;\r\n \r\n       case 501:\r\n         alert(\"服务未实现\");\r\n         break;\r\n \r\n       case 502:\r\n         alert(\"网关错误\");\r\n         break;\r\n \r\n       case 503:\r\n         alert(\"服务不可用\");\r\n         break;\r\n \r\n       case 504:\r\n         alert(\"网关超时\");\r\n         break;\r\n \r\n       case 505:\r\n         alert(\"HTTP版本不受支持\");\r\n         break;\r\n       default:\r\n     }\r\n   }\r\n }\r\n \r\n /**\r\n  * 查看返回的数据\r\n  * @param url\r\n  * @param params\r\n  * @param data\r\n  */\r\n function landing(url, params, data) {\r\n   console.log(url)\r\n   if (data.code === -1) {\r\n   }\r\n }\r\n \r\n ","import { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n    render(){\r\n        return <div>404</div>\r\n    }\r\n    \r\n}","import React from 'react'\r\nimport loadable from 'loadable-components'     //npm i loadable-components 用作解决路由懒加载\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport NotFound from '../views/notFound'\r\n \r\nconst Loading = () => <div>Loading...</div>\r\n \r\nconst Home = loadable(() => import('../views/home'), {\r\n    LoadingComponent: Loading,\r\n})\r\nconst Login = loadable(() => import('../views/login/login'), {\r\n    LoadingComponent: Loading,\r\n})\r\n\r\nconst Register = loadable(() => import('../views/login/register'), {\r\n    LoadingComponent: Loading,\r\n})\r\n\r\nconst User = loadable(() => import('../views/user/user'), {\r\n    LoadingComponent: Loading,\r\n})\r\n//新闻列表页\r\nconst News = loadable(()=> import('../views/news/news'), {\r\n    LoadingComponent: Loading,\r\n})\r\n//新闻详情页\r\nconst NewsDetail = loadable(()=> import('../views/news/newsDetail'), {\r\n    LoadingComponent: Loading,\r\n})\r\n//文章作者的更多页面\r\nconst NewsAuthorMore = loadable(()=> import('../views/news/authorMore'), {\r\n    LoadingComponent: Loading,\r\n})\r\nconst Develop = loadable(() => import('../views/develop.tsx'), {\r\n    LoadingComponent: Loading,\r\n})\r\n// const Oss = loadable(() => import('../views/ossImg.tsx'), {\r\n//     LoadingComponent: Loading,\r\n// })\r\n \r\n \r\nclass IRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/app/login\" component={Login} />\r\n                        <Route path=\"/app/register/:name\" component={Register} />\r\n                        <Route path=\"/app/user\" exact component={User} />\r\n                        <Route path=\"/app/news\" component={News} />\r\n                        <Route path=\"/app/newsdetail\" component={NewsDetail} />\r\n                        <Route path=\"/app/newsauthormore\" component={NewsAuthorMore} />\r\n                        <Route extra path=\"/app\" exact component={Home} />\r\n                        {/* 开发中 */}\r\n                        <Route path=\"/app/develop\" component={Develop} />\r\n                        {/* 404页面 */}\r\n                        <Route path=\"*\" component={NotFound} />\r\n                        {/* <Route path=\"/oss\" component={Oss} /> */}\r\n                    </Switch>\r\n    \r\n                </Router>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default IRouter","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport Router from 'router/index'\nimport reportWebVitals from 'reportWebVitals';\nimport {util} from 'utils/news'\n\nutil.firstToken().then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// util.firstToken()\n"],"sourceRoot":""}